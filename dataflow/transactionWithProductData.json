{
	"name": "transactionWithProductData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "transactions",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "cleanedEyeGlasses",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "transactionWithProductData",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          customer_id as string,",
				"          product_id as string,",
				"          quantity as string,",
				"          transaction_date as string,",
				"          transaction_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          id as integer,",
				"          model_name as string,",
				"          Product_Name as string,",
				"          brand_name as string,",
				"          {Market Price} as short,",
				"          {Lenskart Price} as short,",
				"          purchaseCount as integer,",
				"          size as string,",
				"          color as string,",
				"          width as string,",
				"          totalNoOfRatings as short,",
				"          avgRating as double,",
				"          qty as integer,",
				"          classification as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, cast1 join(product_id == id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"source2 cast(output(",
				"          id as string",
				"     ),",
				"     errors: true) ~> cast1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}